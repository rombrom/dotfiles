[user]
	email = rommert.thomas@gmail.com
	name = Rommert Zijlstra

[core]
	# Use custom `.gitignore` and `.gitattributes`
	attributesfile = ~/.gitattributes
	excludesfile = ~/.gitignore

	# Make `git rebase` safer on macOS
	# More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
	trustctime = false

	# Treat spaces before tabs and all kinds of trailing whitespace as an error
	# [default] trailing-space: looks for spaces at the end of a line
	# [default] space-before-tab: looks for spaces before tabs at the beginning of a line
	whitespace = space-before-tab,-indent-with-non-tab,trailing-space

[alias]
	# Some of these are from/inspired by https://blog.jez.io/cli-code-review/
	# list changed files
	files = !git diff --name-only $(git merge-base HEAD \"${REVIEW_BASE:-main}\")

	# start review
	review = !vim -p $(git files) \
		+\"tabdo Gvdiffsplit ${REVIEW_BASE:-main}\" \
		+\"let g:gitgutter_diff_base = '${REVIEW_BASE:-main}'\"

	# list changed files w/ change statistics
	stat = !git diff --stat $(git merge-base HEAD \"${REVIEW_BASE:-main}\")

	# list TODO's in current HEAD vs default branch
	todo = !vim +'grep TODO $(git diff --name-only $(git merge-base HEAD ${REVIEW_BASE:-main}))' +'cfirst'

[init]
	templatedir = ~/.git_template
	defaultBranch = main

[color]
	# Use colors in Git commands that are capable of colored output when
	# outputting to the terminal. (This is the default setting in Git â‰¥ 1.8.4.)
	ui = auto

[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]
	meta = yellow bold
	frag = magenta bold # line info
	old = red # deletions
	new = green # additions

[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[help]
	# Automatically correct and execute mistyped commands
	autocorrect = 1

[apply]
	# Detect whitespace errors when applying a patch
	whitespace = fix

[diff]
	algorithm = histogram
	colorMoved = true
	tool = vimdiff

[difftool]
	# leave this on, because it can be hard to C-c a
	# difftool sesh
	prompt = true

[merge]
	# Include summaries of merged commits in newly created merge commit messages
	log = true
	tool = vimdiff
	conflictStyle = diff3

[mergetool "vimdiff"]
	cmd = vim -d -f -c \"Gvdiffsplit!\" \"$MERGED\"

[fetch]
	prune = true

[push]
	default = upstream
	useForceIfIncludes = true

[pull]
	rebase = true

[includeIf "gitdir:Code/work/**"]
	path = Code/work/.gitconfig
